-- Initial abstat.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                abstat
version:             0.1.0.0
synopsis:            Abstract analyzer for the While language
-- description:         
license:             GPL-3
license-file:        LICENSE
author:              Federico Poli <federpoli@gmail.com>
maintainer:          Federico Poli <federpoli@gmail.com>
copyright:           (c) 2014 Federico Poli
-- category:            
build-type:          Simple
cabal-version:       >=1.10

library
  exposed-modules:     Abstat.Interface.AST,
                       Abstat.Interface.AbstractDomain,
                       Abstat.Interface.AbstractSemantics,
                       Abstat.Interface.AbstractState,
                       Abstat.Interface.GaloisConnection,
                       Abstat.Interface.Lattice,
                       Abstat.Interface.LatticeProp,
                       Abstat.Interface.Poset,
                       Abstat.Interface.PosetProp,
                       Abstat.Interface.Semantics,
                       Abstat.Interface.State,
                       Abstat.Common.AbstractState,
                       Abstat.Common.BoolDomain,
                       Abstat.Common.ConcreteState,
                       Abstat.Common.FlatDomain,
                       Abstat.Common.FlatDomainProp,
                       Abstat.Common.Generator,
                       While.AST,
                       While.ASTGenerator,
                       While.AbstractSemantics,
                       While.Compiler,
                       While.Concrete,
                       While.Lexer,
                       While.Parser,
                       While.SemanticsProp,
                       While.Domain.Congruence.Domain,
                       While.Domain.Congruence.Semantics,
                       While.Domain.Int.Domain,
                       While.Domain.Int.Semantics,
                       While.Domain.Sign.Domain,
                       While.Domain.Sign.Semantics,
                       While.Domain.Interval.Domain,
                       While.Domain.Interval.Semantics
  ghc-options:         -Wall -fno-warn-unused-do-bind -fwarn-tabs -ferror-spans
                       -O -fno-warn-orphans
  hs-source-dirs:      src
  build-depends:       base,
                       parsec,
                       mtl,
                       hspec,
                       QuickCheck>=2.7.6,
                       containers
  default-language:    Haskell2010

executable main
  main-is:             Main.hs
  ghc-options:         -Wall -fno-warn-unused-do-bind -fwarn-tabs -ferror-spans
                       -O -threaded -with-rtsopts=-N -fno-warn-orphans
  hs-source-dirs:      main
  build-depends:       base,
                       abstat,
                       QuickCheck>=2.7.6,
                       containers
  default-language:    Haskell2010

test-suite spec
  type:                exitcode-stdio-1.0
  main-is:             Spec.hs
  ghc-options:         -Wall -fno-warn-unused-do-bind -fwarn-tabs -ferror-spans
                       -O -threaded -with-rtsopts=-N -fno-warn-orphans
  hs-source-dirs:      src, test
  build-depends:       hspec,
                       QuickCheck>=2.7.6,
                       directory,
                       hspec-core,
                       base,
                       parsec,
                       mtl,
                       containers
  default-language:    Haskell2010
